// <auto-generated />
using System;
using BankApp.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankApp.Data.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20200306130210_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("BankApp.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountHolderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PIN")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountHolderId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountHolderId = 1,
                            AccountType = 2,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(197), new TimeSpan(0, 0, 0, 0, 0)),
                            PIN = "1234"
                        },
                        new
                        {
                            Id = 2,
                            AccountHolderId = 1,
                            AccountType = 0,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(1701), new TimeSpan(0, 0, 0, 0, 0)),
                            PIN = "4321"
                        },
                        new
                        {
                            Id = 3,
                            AccountHolderId = 2,
                            AccountType = 2,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(1733), new TimeSpan(0, 0, 0, 0, 0)),
                            PIN = "1234"
                        },
                        new
                        {
                            Id = 4,
                            AccountHolderId = 2,
                            AccountType = 0,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(1735), new TimeSpan(0, 0, 0, 0, 0)),
                            PIN = "4321"
                        });
                });

            modelBuilder.Entity("BankApp.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CounterpartyAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransactionType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CounterpartyAccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Amount = 2000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(3371), new TimeSpan(0, 0, 0, 0, 0)),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Amount = 2000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(4964), new TimeSpan(0, 0, 0, 0, 0)),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            Amount = 2000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(4999), new TimeSpan(0, 0, 0, 0, 0)),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 4,
                            Amount = 2000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 790, DateTimeKind.Unspecified).AddTicks(5001), new TimeSpan(0, 0, 0, 0, 0)),
                            TransactionType = 1
                        });
                });

            modelBuilder.Entity("BankApp.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 788, DateTimeKind.Unspecified).AddTicks(5350), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Tom",
                            LastName = "Cruise"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 3, 6, 13, 2, 9, 788, DateTimeKind.Unspecified).AddTicks(6612), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Bob",
                            LastName = "Ross"
                        });
                });

            modelBuilder.Entity("BankApp.Data.Models.Account", b =>
                {
                    b.HasOne("BankApp.Data.Models.User", "AccountHolder")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankApp.Data.Models.Transaction", b =>
                {
                    b.HasOne("BankApp.Data.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankApp.Data.Models.Account", "CounterpartyAccount")
                        .WithMany()
                        .HasForeignKey("CounterpartyAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
